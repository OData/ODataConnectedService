//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generation date: 08.03.2021 23:01:43
namespace Microsoft.OData.TestService.DSC
{
    /// <summary>
    /// There are no comments for PersonSingle in the schema.
    /// </summary>
    public partial class PersonSingle : global::Microsoft.OData.Client.DataServiceQuerySingle<Person>
    {
        /// <summary>
        /// Initialize a new PersonSingle object.
        /// </summary>
        public PersonSingle(global::Microsoft.OData.Client.DataServiceContext context, string path)
            : base(context, path) { }

        /// <summary>
        /// Initialize a new PersonSingle object.
        /// </summary>
        public PersonSingle(global::Microsoft.OData.Client.DataServiceContext context, string path, bool isComposable)
            : base(context, path, isComposable) { }

        /// <summary>
        /// Initialize a new PersonSingle object.
        /// </summary>
        public PersonSingle(global::Microsoft.OData.Client.DataServiceQuerySingle<Person> query)
            : base(query) { }

    }
    /// <summary>
    /// There are no comments for Person in the schema.
    /// </summary>
    /// <KeyProperties>
    /// Keys
    /// </KeyProperties>
    [global::Microsoft.OData.Client.Key("Keys")]
    public partial class Person : global::Microsoft.OData.Client.BaseEntityType, global::System.ComponentModel.INotifyPropertyChanged
    {
        /// <summary>
        /// Create a new Person object.
        /// </summary>
        /// <param name="keys">Initial value of Keys.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "2.4.0")]
        public static Person CreatePerson(string keys)
        {
            Person person = new Person();
            person.Keys = keys;
            return person;
        }
        /// <summary>
        /// There are no comments for Property Keys in the schema.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "2.4.0")]
        [global::System.ComponentModel.DataAnnotations.RequiredAttribute(ErrorMessage = "Keys is required.")]
        public virtual string Keys
        {
            get
            {
                return this._Keys;
            }
            set
            {
                this.OnKeysChanging(value);
                this._Keys = value;
                this.OnKeysChanged();
                this.OnPropertyChanged("Keys");
            }
        }
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "2.4.0")]
        private string _Keys;
        partial void OnKeysChanging(string value);
        partial void OnKeysChanged();
        /// <summary>
        /// This event is raised when the value of the property is changed
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "2.4.0")]
        public event global::System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        /// <summary>
        /// The value of the property is changed
        /// </summary>
        /// <param name="property">property name</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "2.4.0")]
        protected virtual void OnPropertyChanged(string property)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new global::System.ComponentModel.PropertyChangedEventArgs(property));
            }
        }
        /// <summary>
        /// There are no comments for TestFunction in the schema.
        /// </summary>
        public virtual global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.OData.TestService.DSC.Person> TestFunction(string source)
        {
            global::System.Uri requestUri;
            Context.TryGetUri(this, out requestUri);
            return this.Context.CreateFunctionQuery<global::Microsoft.OData.TestService.DSC.Person>(string.Join("/", global::System.Linq.Enumerable.Select(global::System.Linq.Enumerable.Skip(requestUri.Segments, this.Context.BaseUri.Segments.Length), s => s.Trim('/'))), "Microsoft.OData.TestService.DSC.TestFunction", false, new global::Microsoft.OData.Client.UriOperationParameter("source", source));
        }
    }
    /// <summary>
    /// Class containing all extension methods
    /// </summary>
    public static class ExtensionMethods
    {
        /// <summary>
        /// Get an entity of type global::Microsoft.OData.TestService.DSC.Person as global::Microsoft.OData.TestService.DSC.PersonSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.OData.TestService.DSC.PersonSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.OData.TestService.DSC.Person> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.OData.TestService.DSC.PersonSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.OData.TestService.DSC.Person as global::Microsoft.OData.TestService.DSC.PersonSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="keys">The value of keys</param>
        public static global::Microsoft.OData.TestService.DSC.PersonSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.OData.TestService.DSC.Person> _source,
            string keys)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "Keys", keys }
            };
            return new global::Microsoft.OData.TestService.DSC.PersonSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// There are no comments for TestFunction in the schema.
        /// </summary>
        public static global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.OData.TestService.DSC.Person> TestFunction(this global::Microsoft.OData.Client.DataServiceQuerySingle<global::Microsoft.OData.TestService.DSC.Person> _source, string source)
        {
            if (!_source.IsComposable)
            {
                throw new global::System.NotSupportedException("The previous function is not composable.");
            }

            return _source.CreateFunctionQuery<global::Microsoft.OData.TestService.DSC.Person>("Microsoft.OData.TestService.DSC.TestFunction", false, new global::Microsoft.OData.Client.UriOperationParameter("source", source));
        }
    }
}
