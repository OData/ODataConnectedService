//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generation date: 1/28/2020 3:05:18 PM
namespace Microsoft.OData.TestService
{
    /// <summary>
    /// There are no comments for PersonSingle in the schema.
    /// </summary>
    public partial class PersonSingle : global::Microsoft.OData.Client.DataServiceQuerySingle<Person>
    {
        /// <summary>
        /// Initialize a new PersonSingle object.
        /// </summary>
        public PersonSingle(global::Microsoft.OData.Client.DataServiceContext context, string path)
            : base(context, path) { }

        /// <summary>
        /// Initialize a new PersonSingle object.
        /// </summary>
        public PersonSingle(global::Microsoft.OData.Client.DataServiceContext context, string path, bool isComposable)
            : base(context, path, isComposable) { }

        /// <summary>
        /// Initialize a new PersonSingle object.
        /// </summary>
        public PersonSingle(global::Microsoft.OData.Client.DataServiceQuerySingle<Person> query)
            : base(query) { }

    }
    /// <summary>
    /// There are no comments for Person in the schema.
    /// </summary>
    /// <KeyProperties>
    /// UserName
    /// </KeyProperties>
    [global::Microsoft.OData.Client.Key("UserName")]
    public partial class Person : global::Microsoft.OData.Client.BaseEntityType
    {
        /// <summary>
        /// Create a new Person object.
        /// </summary>
        /// <param name="userName">Initial value of UserName.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "2.4.0")]
        public static Person CreatePerson(string userName)
        {
            Person person = new Person();
            person.UserName = userName;
            return person;
        }
        /// <summary>
        /// There are no comments for Property UserName in the schema.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "2.4.0")]
        public virtual string UserName
        {
            get
            {
                return this._UserName;
            }
            set
            {
                this.OnUserNameChanging(value);
                this._UserName = value;
                this.OnUserNameChanged();
            }
        }
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "2.4.0")]
        private string _UserName;
        partial void OnUserNameChanging(string value);
        partial void OnUserNameChanged();
        /// <summary>
        /// There are no comments for Property WakeUpTime in the schema.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "2.4.0")]
        public virtual global::System.Nullable<global::Microsoft.OData.Edm.TimeOfDay> WakeUpTime
        {
            get
            {
                return this._WakeUpTime;
            }
            set
            {
                this.OnWakeUpTimeChanging(value);
                this._WakeUpTime = value;
                this.OnWakeUpTimeChanged();
            }
        }
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "2.4.0")]
        private global::System.Nullable<global::Microsoft.OData.Edm.TimeOfDay> _WakeUpTime;
        partial void OnWakeUpTimeChanging(global::System.Nullable<global::Microsoft.OData.Edm.TimeOfDay> value);
        partial void OnWakeUpTimeChanged();
        /// <summary>
        /// There are no comments for ReminderView in the schema.
        /// </summary>
        public virtual global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.OData.TestService.Person> ReminderView(string StartDateTime, string EndDateTime, global::System.Nullable<int> MaxCount)
        {
            global::System.Uri requestUri;
            Context.TryGetUri(this, out requestUri);
            return this.Context.CreateFunctionQuery<global::Microsoft.OData.TestService.Person>(string.Join("/", global::System.Linq.Enumerable.Select(global::System.Linq.Enumerable.Skip(requestUri.Segments, this.Context.BaseUri.Segments.Length), s => s.Trim('/'))), "Microsoft.OData.TestService.ReminderView", false, new global::Microsoft.OData.Client.UriOperationParameter("StartDateTime", StartDateTime),
                    new global::Microsoft.OData.Client.UriOperationParameter("EndDateTime", EndDateTime),
                    new global::Microsoft.OData.Client.UriOperationParameter("MaxCount", MaxCount));
        }
    }
    /// <summary>
    /// There are no comments for ReminderSingle in the schema.
    /// </summary>
    public partial class ReminderSingle : global::Microsoft.OData.Client.DataServiceQuerySingle<Reminder>
    {
        /// <summary>
        /// Initialize a new ReminderSingle object.
        /// </summary>
        public ReminderSingle(global::Microsoft.OData.Client.DataServiceContext context, string path)
            : base(context, path) { }

        /// <summary>
        /// Initialize a new ReminderSingle object.
        /// </summary>
        public ReminderSingle(global::Microsoft.OData.Client.DataServiceContext context, string path, bool isComposable)
            : base(context, path, isComposable) { }

        /// <summary>
        /// Initialize a new ReminderSingle object.
        /// </summary>
        public ReminderSingle(global::Microsoft.OData.Client.DataServiceQuerySingle<Reminder> query)
            : base(query) { }

    }
    /// <summary>
    /// There are no comments for Reminder in the schema.
    /// </summary>
    /// <KeyProperties>
    /// Id
    /// </KeyProperties>
    [global::Microsoft.OData.Client.Key("Id")]
    public partial class Reminder : global::Microsoft.OData.Client.BaseEntityType
    {
        /// <summary>
        /// There are no comments for Property Id in the schema.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "2.4.0")]
        public virtual global::System.Nullable<int> Id
        {
            get
            {
                return this._Id;
            }
            set
            {
                this.OnIdChanging(value);
                this._Id = value;
                this.OnIdChanged();
            }
        }
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "2.4.0")]
        private global::System.Nullable<int> _Id;
        partial void OnIdChanging(global::System.Nullable<int> value);
        partial void OnIdChanged();
        /// <summary>
        /// There are no comments for Property ReminderTime in the schema.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "2.4.0")]
        public virtual string ReminderTime
        {
            get
            {
                return this._ReminderTime;
            }
            set
            {
                this.OnReminderTimeChanging(value);
                this._ReminderTime = value;
                this.OnReminderTimeChanged();
            }
        }
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "2.4.0")]
        private string _ReminderTime;
        partial void OnReminderTimeChanging(string value);
        partial void OnReminderTimeChanged();
    }
    /// <summary>
    /// Class containing all extension methods
    /// </summary>
    public static class ExtensionMethods
    {
        /// <summary>
        /// Get an entity of type global::Microsoft.OData.TestService.Person as global::Microsoft.OData.TestService.PersonSingle specified by key from an entity set
        /// </summary>
        /// <param name="source">source entity set</param>
        /// <param name="keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.OData.TestService.PersonSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.OData.TestService.Person> source, global::System.Collections.Generic.IDictionary<string, object> keys)
        {
            return new global::Microsoft.OData.TestService.PersonSingle(source.Context, source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(source.Context, keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.OData.TestService.Person as global::Microsoft.OData.TestService.PersonSingle specified by key from an entity set
        /// </summary>
        /// <param name="source">source entity set</param>
        /// <param name="userName">The value of userName</param>
        public static global::Microsoft.OData.TestService.PersonSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.OData.TestService.Person> source,
            string userName)
        {
            global::System.Collections.Generic.IDictionary<string, object> keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "UserName", userName }
            };
            return new global::Microsoft.OData.TestService.PersonSingle(source.Context, source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(source.Context, keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.OData.TestService.Reminder as global::Microsoft.OData.TestService.ReminderSingle specified by key from an entity set
        /// </summary>
        /// <param name="source">source entity set</param>
        /// <param name="keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.OData.TestService.ReminderSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.OData.TestService.Reminder> source, global::System.Collections.Generic.IDictionary<string, object> keys)
        {
            return new global::Microsoft.OData.TestService.ReminderSingle(source.Context, source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(source.Context, keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.OData.TestService.Reminder as global::Microsoft.OData.TestService.ReminderSingle specified by key from an entity set
        /// </summary>
        /// <param name="source">source entity set</param>
        /// <param name="id">The value of id</param>
        public static global::Microsoft.OData.TestService.ReminderSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.OData.TestService.Reminder> source,
            global::System.Nullable<int> id)
        {
            global::System.Collections.Generic.IDictionary<string, object> keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "Id", id }
            };
            return new global::Microsoft.OData.TestService.ReminderSingle(source.Context, source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(source.Context, keys)));
        }
        /// <summary>
        /// There are no comments for ReminderView in the schema.
        /// </summary>
        public static global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.OData.TestService.Person> ReminderView(this global::Microsoft.OData.Client.DataServiceQuerySingle<global::Microsoft.OData.TestService.Person> source, string StartDateTime, string EndDateTime, global::System.Nullable<int> MaxCount)
        {
            if (!source.IsComposable)
            {
                throw new global::System.NotSupportedException("The previous function is not composable.");
            }

            return source.CreateFunctionQuery<global::Microsoft.OData.TestService.Person>("Microsoft.OData.TestService.ReminderView", false, new global::Microsoft.OData.Client.UriOperationParameter("StartDateTime", StartDateTime),
                    new global::Microsoft.OData.Client.UriOperationParameter("EndDateTime", EndDateTime),
                    new global::Microsoft.OData.Client.UriOperationParameter("MaxCount", MaxCount));
        }
    }
} 