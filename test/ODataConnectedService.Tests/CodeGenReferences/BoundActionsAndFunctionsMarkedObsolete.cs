//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generation date: 19.05.2021 1:03:02
namespace Namespace1
{
    /// <summary>
    /// There are no comments for EntityContainer in the schema.
    /// </summary>
    public partial class EntityContainer : global::Microsoft.OData.Client.DataServiceContext
    {
        /// <summary>
        /// Initialize a new EntityContainer object.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        public EntityContainer(global::System.Uri serviceRoot) :
                this(serviceRoot, global::Microsoft.OData.Client.ODataProtocolVersion.V4)
        {
        }
        /// <summary>
        /// Initialize a new EntityContainer object.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        public EntityContainer(global::System.Uri serviceRoot, global::Microsoft.OData.Client.ODataProtocolVersion protocolVersion) :
                base(serviceRoot, protocolVersion)
        {
            this.OnContextCreated();
            this.Format.LoadServiceModel = GeneratedEdmModel.GetInstance;
            this.Format.UseJson();
        }
        partial void OnContextCreated();
        /// <summary>
        /// There are no comments for Products in the schema.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        public virtual global::Microsoft.OData.Client.DataServiceQuery<Product> Products
        {
            get
            {
                if ((this._Products == null))
                {
                    this._Products = base.CreateQuery<Product>("Products");
                }
                return this._Products;
            }
        }
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        private global::Microsoft.OData.Client.DataServiceQuery<Product> _Products;
        /// <summary>
        /// There are no comments for Products in the schema.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        public virtual void AddToProducts(Product product)
        {
            base.AddObject("Products", product);
        }
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        private abstract class GeneratedEdmModel
        {
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
            private static global::Microsoft.OData.Edm.IEdmModel ParsedModel = LoadModelFromString();

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
            private const string Edmx = @"<edmx:Edmx Version=""4.0"" xmlns:edmx=""http://docs.oasis-open.org/odata/ns/edmx"">
  <edmx:DataServices>
    <Schema Namespace=""Namespace1"" xmlns=""http://docs.oasis-open.org/odata/ns/edm"">
      <EntityType Name=""Product"">
        <Key>
          <PropertyRef Name=""Id"" />
        </Key>
        <Property Name=""Id"" Type=""Edm.Int32"" Nullable=""false"" />
        <Property Name=""Name"" Type=""Edm.String"" Nullable=""false"" />
      </EntityType>
      <Function Name=""GetProductTax"" IsBound=""true"">
        <Parameter Name=""product"" Type=""Namespace1.Product"" />
        <Parameter Name=""taxRate"" Type=""Edm.Double"" Nullable=""false"" />
        <ReturnType Type=""Edm.Double"" />
        <Annotation Term=""Org.OData.Core.V1.Revisions"">
          <Collection>
            <Record>
              <PropertyValue Property=""Date"" Date=""2020-08-20"" />
              <PropertyValue Property=""Version"" String=""2020-08/Tasks_And_Plans"" />
              <PropertyValue Property=""Kind"" EnumMember=""Org.OData.Core.V1.RevisionKind/Deprecated"" />
              <PropertyValue Property=""Description"" String=""The Service has deprecated the GetProductTax Function and will stop returning data on August 20, 2022."" />
              <PropertyValue Property=""RemovalDate"" Date=""2022-08-20"" />
            </Record>
          </Collection>
        </Annotation>
      </Function>
      <Action Name=""UpdateProductName"" IsBound=""true"">
        <Parameter Name=""product"" Type=""Namespace1.Product"" />
        <Parameter Name=""lastName"" Type=""Edm.String"" Nullable=""false"" Unicode=""false"" />
        <ReturnType Type=""Namespace1.Product"" Nullable=""false"" />
        <Annotation Term=""Org.OData.Core.V1.Revisions"">
          <Collection>
            <Record>
              <PropertyValue Property=""Date"" Date=""2020-08-20"" />
              <PropertyValue Property=""Version"" String=""2020-08/Tasks_And_Plans"" />
              <PropertyValue Property=""Kind"" EnumMember=""Org.OData.Core.V1.RevisionKind/Deprecated"" />
              <PropertyValue Property=""Description"" String=""The Service has deprecated the UpdateProductName Action and will stop returning data on August 20, 2022."" />
              <PropertyValue Property=""RemovalDate"" Date=""2022-08-20"" />
            </Record>
          </Collection>
        </Annotation>
      </Action>
      <EntityContainer Name=""EntityContainer"">
        <EntitySet Name=""Products"" EntityType=""Namespace1.Product"" />
      </EntityContainer>
    </Schema>
  </edmx:DataServices>
</edmx:Edmx>";

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
            public static global::Microsoft.OData.Edm.IEdmModel GetInstance()
            {
                return ParsedModel;
            }
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
            private static global::Microsoft.OData.Edm.IEdmModel LoadModelFromString()
            {
                global::System.Xml.XmlReader reader = CreateXmlReader(Edmx);
                try
                {
                    global::System.Collections.Generic.IEnumerable<global::Microsoft.OData.Edm.Validation.EdmError> errors;
                    global::Microsoft.OData.Edm.IEdmModel edmModel;

                    if (!global::Microsoft.OData.Edm.Csdl.CsdlReader.TryParse(reader, false, out edmModel, out errors))
                    {
                        global::System.Text.StringBuilder errorMessages = new global::System.Text.StringBuilder();
                        foreach (var error in errors)
                        {
                            errorMessages.Append(error.ErrorMessage);
                            errorMessages.Append("; ");
                        }
                        throw new global::System.InvalidOperationException(errorMessages.ToString());
                    }

                    return edmModel;
                }
                finally
                {
                    ((global::System.IDisposable)(reader)).Dispose();
                }
            }
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
            private static global::System.Xml.XmlReader CreateXmlReader(string edmxToParse)
            {
                return global::System.Xml.XmlReader.Create(new global::System.IO.StringReader(edmxToParse));
            }

        }
    }
    /// <summary>
    /// There are no comments for ProductSingle in the schema.
    /// </summary>
    public partial class ProductSingle : global::Microsoft.OData.Client.DataServiceQuerySingle<Product>
    {
        /// <summary>
        /// Initialize a new ProductSingle object.
        /// </summary>
        public ProductSingle(global::Microsoft.OData.Client.DataServiceContext context, string path)
            : base(context, path) { }

        /// <summary>
        /// Initialize a new ProductSingle object.
        /// </summary>
        public ProductSingle(global::Microsoft.OData.Client.DataServiceContext context, string path, bool isComposable)
            : base(context, path, isComposable) { }

        /// <summary>
        /// Initialize a new ProductSingle object.
        /// </summary>
        public ProductSingle(global::Microsoft.OData.Client.DataServiceQuerySingle<Product> query)
            : base(query) { }

    }
    /// <summary>
    /// There are no comments for Product in the schema.
    /// </summary>
    /// <KeyProperties>
    /// Id
    /// </KeyProperties>
    [global::Microsoft.OData.Client.Key("Id")]
    public partial class Product : global::Microsoft.OData.Client.BaseEntityType
    {
        /// <summary>
        /// Create a new Product object.
        /// </summary>
        /// <param name="ID">Initial value of Id.</param>
        /// <param name="name">Initial value of Name.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        public static Product CreateProduct(int ID, string name)
        {
            Product product = new Product();
            product.Id = ID;
            product.Name = name;
            return product;
        }
        /// <summary>
        /// There are no comments for Property Id in the schema.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]

        [global::System.ComponentModel.DataAnnotations.RequiredAttribute(ErrorMessage = "Id is required.")]
        public virtual int Id
        {
            get
            {
                return this._Id;
            }
            set
            {
                this.OnIdChanging(value);
                this._Id = value;
                this.OnIdChanged();
            }
        }
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        private int _Id;
        partial void OnIdChanging(int value);
        partial void OnIdChanged();
        /// <summary>
        /// There are no comments for Property Name in the schema.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]

        [global::System.ComponentModel.DataAnnotations.RequiredAttribute(ErrorMessage = "Name is required.")]
        public virtual string Name
        {
            get
            {
                return this._Name;
            }
            set
            {
                this.OnNameChanging(value);
                this._Name = value;
                this.OnNameChanged();
            }
        }
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        private string _Name;
        partial void OnNameChanging(string value);
        partial void OnNameChanged();
        /// <summary>
        /// There are no comments for GetProductTax in the schema.
        /// </summary>
        [global::System.ObsoleteAttribute("The Service has deprecated the GetProductTax Function and will stop returning data on August 20, 2022.")]
        public virtual global::Microsoft.OData.Client.DataServiceQuerySingle<global::System.Nullable<double>> GetProductTax(double taxRate)
        {
            global::System.Uri requestUri;
            Context.TryGetUri(this, out requestUri);

            return this.Context.CreateFunctionQuerySingle<global::System.Nullable<double>>(string.Join("/", global::System.Linq.Enumerable.Select(global::System.Linq.Enumerable.Skip(requestUri.Segments, this.Context.BaseUri.Segments.Length), s => s.Trim('/'))), "Namespace1.GetProductTax", false, new global::Microsoft.OData.Client.UriOperationParameter("taxRate", taxRate));
        }
        /// <summary>
        /// There are no comments for UpdateProductName in the schema.
        /// </summary>
        [global::System.ObsoleteAttribute("The Service has deprecated the UpdateProductName Action and will stop returning data on August 20, 2022.")]
        public virtual global::Microsoft.OData.Client.DataServiceActionQuerySingle<global::Namespace1.Product> UpdateProductName(string lastName)
        {
            global::Microsoft.OData.Client.EntityDescriptor resource = Context.EntityTracker.TryGetEntityDescriptor(this);
            if (resource == null)
            {
                throw new global::System.Exception("cannot find entity");
            }

            return new global::Microsoft.OData.Client.DataServiceActionQuerySingle<global::Namespace1.Product>(this.Context, resource.EditLink.OriginalString.Trim('/') + "/Namespace1.UpdateProductName", new global::Microsoft.OData.Client.BodyOperationParameter("lastName", lastName));
        }
    }
    /// <summary>
    /// Class containing all extension methods
    /// </summary>
    public static class ExtensionMethods
    {
        /// <summary>
        /// Get an entity of type global::Namespace1.Product as global::Namespace1.ProductSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Namespace1.ProductSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Namespace1.Product> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Namespace1.ProductSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Namespace1.Product as global::Namespace1.ProductSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="id">The value of id</param>
        public static global::Namespace1.ProductSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Namespace1.Product> _source,
            int id)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "Id", id }
            };
            return new global::Namespace1.ProductSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// There are no comments for GetProductTax in the schema.
        /// </summary>
        public static global::Microsoft.OData.Client.DataServiceQuerySingle<global::System.Nullable<double>> GetProductTax(this global::Microsoft.OData.Client.DataServiceQuerySingle<global::Namespace1.Product> _source, double taxRate)
        {
            if (!_source.IsComposable)
            {
                throw new global::System.NotSupportedException("The previous function is not composable.");
            }

            return _source.CreateFunctionQuerySingle<global::System.Nullable<double>>("Namespace1.GetProductTax", false, new global::Microsoft.OData.Client.UriOperationParameter("taxRate", taxRate));
        }
        /// <summary>
        /// There are no comments for UpdateProductName in the schema.
        /// </summary>
        public static global::Microsoft.OData.Client.DataServiceActionQuerySingle<global::Namespace1.Product> UpdateProductName(this global::Microsoft.OData.Client.DataServiceQuerySingle<global::Namespace1.Product> _source, string lastName)
        {
            if (!_source.IsComposable)
            {
                throw new global::System.NotSupportedException("The previous function is not composable.");
            }

            return new global::Microsoft.OData.Client.DataServiceActionQuerySingle<global::Namespace1.Product>(_source.Context, _source.AppendRequestUri("Namespace1.UpdateProductName"), new global::Microsoft.OData.Client.BodyOperationParameter("lastName", lastName));
        }
    }
}
