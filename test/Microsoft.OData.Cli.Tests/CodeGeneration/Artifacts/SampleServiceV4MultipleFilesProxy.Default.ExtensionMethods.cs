//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:8.0.4
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generation date: 07-May-24 4:36:22 PM
namespace SampleServiceV4.Default
{
    /// <summary>
    /// Class containing all extension methods
    /// </summary>
    public static class ExtensionMethods
    {
        /// <summary>
        /// There are no comments for GetTopCustomers in the schema.
        /// </summary>
        public static global::Microsoft.OData.Client.DataServiceQuery<global::SampleServiceV4.Models.Customer> GetTopCustomers(this global::Microsoft.OData.Client.DataServiceQuery<global::SampleServiceV4.Models.Customer> _source)
        {
            if (!_source.IsComposable)
            {
                throw new global::System.NotSupportedException("The previous function is not composable.");
            }

            return _source.CreateFunctionQuery<global::SampleServiceV4.Models.Customer>("SampleServiceV4.Default.GetTopCustomers", false);
        }
        /// <summary>
        /// There are no comments for RateCustomer in the schema.
        /// </summary>
        public static global::Microsoft.OData.Client.DataServiceActionQuery RateCustomer(this global::Microsoft.OData.Client.DataServiceQuerySingle<global::SampleServiceV4.Models.Customer> _source, int rating)
        {
            if (!_source.IsComposable)
            {
                throw new global::System.NotSupportedException("The previous function is not composable.");
            }

            return new global::Microsoft.OData.Client.DataServiceActionQuery(_source.Context, _source.AppendRequestUri("SampleServiceV4.Default.RateCustomer"), new global::Microsoft.OData.Client.BodyOperationParameter("rating", rating));
        }
        /// <summary>
        /// There are no comments for ProcessOrder in the schema.
        /// </summary>
        public static global::Microsoft.OData.Client.DataServiceActionQuery ProcessOrder(this global::Microsoft.OData.Client.DataServiceQuerySingle<global::SampleServiceV4.Models.Order> _source)
        {
            if (!_source.IsComposable)
            {
                throw new global::System.NotSupportedException("The previous function is not composable.");
            }

            return new global::Microsoft.OData.Client.DataServiceActionQuery(_source.Context, _source.AppendRequestUri("SampleServiceV4.Default.ProcessOrder"));
        }
    }
}
